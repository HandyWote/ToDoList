# -*- coding: utf-8 -*-
# Form implementation generated from reading ui file 'mainUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
from datetime import datetime

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QWidget, QApplication

from addW import Ui_addW


class Ui_mainUI(QWidget):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.aw = None

    def setupUi(self, mainUI):
        mainUI.setObjectName("mainUI")
        mainUI.resize(251, 457)
        mainUI.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.setWindowIcon(QIcon('icon.ic'))

        self.calendar = QtWidgets.QCalendarWidget(mainUI)
        self.calendar.setGeometry(QtCore.QRect(0, 0, 251, 197))
        self.calendar.setGridVisible(True)
        self.calendar.setHorizontalHeaderFormat(QtWidgets.QCalendarWidget.ShortDayNames)
        self.calendar.setVerticalHeaderFormat(QtWidgets.QCalendarWidget.NoVerticalHeader)
        self.calendar.setNavigationBarVisible(True)
        self.calendar.setDateEditEnabled(True)
        self.calendar.setObjectName("calendar")
        now_Date = datetime.now().date()
        self.calendar.setSelectedDate(now_Date)


        self.date = QtWidgets.QGroupBox(mainUI)
        self.date.setGeometry(QtCore.QRect(10, 200, 231, 171))
        self.date.setFlat(True)
        self.date.setCheckable(False)
        self.date.setObjectName("date")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.date)
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout.setObjectName("verticalLayout")
        self.date.setLayout(self.verticalLayout)
        self.productCheckBox()


        self.addToDo = QtWidgets.QPushButton(mainUI)
        self.addToDo.setGeometry(QtCore.QRect(10, 400, 231, 21))
        self.addToDo.setObjectName("addToDo")

        self.label = QtWidgets.QLabel(mainUI)
        self.label.setGeometry(QtCore.QRect(10, 440, 231, 20))
        self.label.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.label.setObjectName("label")

        self.retranslateUi(mainUI)
        self.addToDo.clicked.connect(self.toAddW)
        QtCore.QMetaObject.connectSlotsByName(mainUI)

    def retranslateUi(self, mainUI):
        _translate = QtCore.QCoreApplication.translate
        mainUI.setWindowTitle(_translate("mainUI", "ToDoList"))
        self.date.setTitle(_translate("mainUI", "日程："))
        self.addToDo.setText(_translate("mainUI", "添加日程"))
        self.label.setText(_translate("mainUI", "<a href=\'https://github.com/HandyWote/ToDoList\'>作者:HandyWote</a>"))

    def toAddW(self):
        self.aw = Ui_addW()
        self.aw.show()
        self.close()

    def productCheckBox(self):
        with open('Date.txt', 'r', encoding='utf-8') as f:
            for i, toDo in enumerate(f):
                toDo = toDo.strip()
                if toDo:
                    checkbox = QtWidgets.QCheckBox(f"{toDo}")
                    self.verticalLayout.addWidget(checkbox)
                    checkbox.stateChanged.connect(self.checkboxStatusChanged)

    def deleteCheckBox(self, num):
        toDoes = []
        with open('Date.txt', 'r', encoding='utf-8') as f:
            for toDe in f:
                toDe = toDe.strip()
                if toDe:
                    toDoes.append(toDe)
            f.close()
        with open('Date.txt', 'w', encoding='utf-8') as f:
            for i, toDo in enumerate(toDoes):
                if i != num:
                    if toDo[-1] == '\n':
                        f.write(toDo)
                    else:
                        f.write(toDo+'\n')
            f.close()

    def checkboxStatusChanged(self):
        checkbox = self.sender()
        if checkbox:
            index = self.verticalLayout.indexOf(checkbox)
            self.deleteCheckBox(index)



if __name__ == '__main__':
    with open('Date.txt', 'a', encoding='utf-8') as f:
        f.write('')
    app = QApplication(sys.argv)
    Dlg = Ui_mainUI()
    Dlg.show()
    sys.exit(app.exec_())